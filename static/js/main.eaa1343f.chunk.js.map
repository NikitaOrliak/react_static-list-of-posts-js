{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","_ref","_ref$user","user","name","email","_jsx","className","href","concat","children","CommentInfo","_ref$comment","comment","body","_jsxs","CommentList","comments","map","id","PostInfo","_ref$post","post","title","length","PostList","posts","postsFromServer","_objectSpread","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAEaA,EAAW,SAAHC,GAAA,IAAAC,EAAAD,EACnBE,KAAQC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAK,OAEnBC,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYJ,GAAQK,SAC7CN,GACC,ECPOO,EAAc,SAAHV,GAAA,IAAAW,EAAAX,EACtBY,QAAWT,EAAIQ,EAAJR,KAAMC,EAAKO,EAALP,MAAOS,EAAIF,EAAJE,KAAI,OAE5BC,eAAA,OAAKR,UAAU,cAAaG,SAAA,CAC1BK,eAAA,OAAKR,UAAU,qBAAoBG,SAAA,CACjCJ,cAAA,UAAQC,UAAU,oBAAmBG,SAClCN,IAGF,OAEDE,cAAA,KAAGC,UAAU,qBAAqBC,KAAI,UAAAC,OAAYJ,GAAQK,SACvDL,OAILC,cAAA,OAAKC,UAAU,oBAAmBG,SAC/BI,MAEC,EChBKE,G,MAAc,SAAHf,GAAA,IAAMgB,EAAQhB,EAARgB,SAAQ,OACpCX,cAAA,OAAKC,UAAU,cAAaG,SACzBO,EAASC,KAAI,SAAAL,GAAO,OACnBP,cAACK,EAAW,CAACE,QAASA,GAAcA,EAAQM,GAAM,KAEhD,GCJKC,G,MAAW,SAAHnB,GAAA,IAAAoB,EAAApB,EACnBqB,KAAQC,EAAKF,EAALE,MAAOpB,EAAIkB,EAAJlB,KAAMW,EAAIO,EAAJP,KAAMG,EAAQI,EAARJ,SAAQ,OAEnCF,eAAA,OAAKR,UAAU,WAAUG,SAAA,CACvBK,eAAA,OAAKR,UAAU,mBAAkBG,SAAA,CAC/BJ,cAAA,MAAIC,UAAU,kBAAiBG,SAC5Ba,IAGHR,eAAA,KAAAL,SAAA,CACG,eACDJ,cAACN,EAAQ,CAACG,KAAMA,UAIpBG,cAAA,KAAGC,UAAU,iBAAgBG,SAC1BI,IAGHR,cAAA,SAGsB,IAApBW,EAASO,OACLlB,cAACU,EAAW,CAACC,SAAUA,IACvBX,cAAA,KAAG,UAAQ,oBAAmBI,SAAC,sBAEjC,GC5BKe,EAAW,SAAHxB,GAAA,IAAMyB,EAAKzB,EAALyB,MAAK,OAC9BpB,cAAA,OAAKC,UAAU,WAAUG,SACtBgB,EAAMR,KAAI,SAAAI,GAAI,OACbhB,cAACc,EAAQ,CAACE,KAAMA,GAAWA,EAAKH,GAAM,KAEpC,ECSD,IAAMO,EAAQC,EAAgBT,KAAI,SAAAI,GAAI,OAAAM,wBAAA,GACxCN,GAAI,IACPnB,MAXmB0B,EAWDP,EAAKO,OAVhBC,EAAgBC,MAAK,SAAA5B,GAAI,OAAIA,EAAKgB,KAAOU,CAAM,KAC/C,MAUPZ,UAPuBe,EAOGV,EAAKH,GANxBc,EAAmBC,QAAO,SAAArB,GAAO,OAAIA,EAAQmB,SAAWA,CAAM,OADvE,IAAyBA,EALJH,CAYe,IAGvBM,EAAM,WAAH,OACdpB,eAAA,WAASR,UAAU,MAAKG,SAAA,CACtBJ,cAAA,MAAIC,UAAU,aAAYG,SAAC,yBAC3BJ,cAACmB,EAAQ,CAACC,MAAOA,MACT,ECtBZU,IAASC,OACP/B,cAAC6B,EAAG,IACJG,SAASC,eAAe,Q","file":"static/js/main.eaa1343f.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({\n  user: { name, email },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","export const CommentInfo = ({\n  comment: { name, email, body },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n","import { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({\n  post: { title, user, body, comments },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    <hr />\n\n    {\n      comments.length !== 0\n        ? <CommentList comments={comments} />\n        : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}